#include <bits/stdc++.h>
using namespace std;

char st[11][7][5] = {{{'x','x','x','x','x'},
                      {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'}},
                     {{'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'}},
					 {{'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'x','x','x','x','x'},
					  {'x','.','.','.','.'},
					  {'x','.','.','.','.'},
					  {'x','x','x','x','x'}},
					 {{'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'x','x','x','x','x'}},
					 {{'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'}},
					 {{'x','x','x','x','x'},
					  {'x','.','.','.','.'},
					  {'x','.','.','.','.'},
					  {'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'x','x','x','x','x'}},
					 {{'x','x','x','x','x'},
					  {'x','.','.','.','.'},
					  {'x','.','.','.','.'},
					  {'x','x','x','x','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'}},
					 {{'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'}},
					 {{'x','x','x','x','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'}},
					 {{'x','x','x','x','x'},
					  {'x','.','.','.','x'},
					  {'x','.','.','.','x'},
					  {'x','x','x','x','x'},
					  {'.','.','.','.','x'},
					  {'.','.','.','.','x'},
					  {'x','x','x','x','x'}},
					 {{'.','.','.','.','.'},
					  {'.','.','x','.','.'},
					  {'.','.','x','.','.'},
					  {'x','x','x','x','x'},
					  {'.','.','x','.','.'},
					  {'.','.','x','.','.'},
					  {'.','.','.','.','.'}}};

bool equal(vector<vector<char>> pt, int idx) {
	int i, j;
	for (i = 0; i < 7; ++i) {
		for (j = 0 ; j < 5; ++j) {
			if (pt[i][j] != st[idx][i][j]) return false;
		}
	}

	return true;
}

int getval(vector<vector<char>> pt) {
	int i;
	for (i = 0 ; i < 11; ++i) {
		if (equal(pt, i)) return i;
	}
	return -1;
}

char s[7][1011];
vector<char> a[7];

int main() {
	int i, j, len = 0, k;
	for (i = 0 ; i < 7; ++i) {
		scanf("%s", s[i]);
	}

	len = strlen(s[0]);
	vector<int> ret;
	int num = 0;
	for (i = 0; i < len; i = i + 6) {
		vector<vector<char>> curr;
		for (j = 0; j < 7; ++j) {
			vector<char> vc;
			for (k = i; k < i + 5; ++k) {
				vc.push_back(s[j][k]);
			}
			curr.push_back(vc);
		}

		int val = getval(curr);
		if (val == 10) {
			ret.push_back(num);
			num = 0;
		} else {
			num = num * 10 + val;
		}
	}

	ret.push_back(num);
	
	int ans = ret[0] + ret[1];
	vector<int> res;
	while (ans > 0) {
		res.push_back(ans % 10);
		ans /= 10;
	}

	reverse(res.begin(), res.end());
	for (i = 0 ; i < (int) res.size(); ++i) {
		if (i != 0) {
			for (j = 0 ; j < 7; ++j) {
				a[j].push_back('.');
			}
		}

		for (j = 0 ; j < 7; ++j) {
			for (k = 0 ; k < 5; ++k) {
				a[j].push_back(st[res[i]][j][k]);
			}
		}
	}

	for (i = 0 ; i < 7; ++i) {
		for (auto v : a[i]) {
			putchar(v);
		}
		cout << endl;
	}
	return 0;
}